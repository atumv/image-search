{"version":3,"sources":["components/ImageSearch.js","components/ImageList.js","components/Pagination.js","App.js","components/ImageView.js","Router.js","index.js"],"names":["useStyles","makeStyles","root","width","fontFamily","borderRadius","paddingLeft","color","borderColor","border","backgroundColor","fill","ImageSearch","getImages","setSearchBtnRef","classes","searchInput","useRef","searchBtn","useEffect","current","focus","className","onSubmit","TextField","variant","name","inputRef","InputProps","endAdornment","InputAdornment","IconButton","type","ref","ImageList","images","totalPages","style","minHeight","map","image","key","id","to","pathname","state","src","largeImageURL","alt","Pagination","props","pageLinks","i","push","currentPage","href","onClick","e","preventDefault","changePage","App","useState","setImages","undefined","loading","setLoading","setTotalPages","setCurrentPage","prevQuery","setPrevQuery","searchBtnRef","error","setError","pageCounter","a","pages","parseInt","response","totalHits","query","target","elements","value","url","fetch","request","json","total","hits","pageNum","window","scrollTo","top","setTimeout","click","textTransform","ImageView","location","tags","user","Button","size","startIcon","xmlns","viewBox","d","Router","path","component","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.85ede97d.chunk.js","sourcesContent":["import React, { useRef, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\",\r\n    \"& .MuiInputBase-root\": {\r\n      fontFamily:\r\n        '\"Montserrat\", \"Open Sans\", \"Segoe UI\", \"Tahoma\", \"Geneva\", \"Verdana\", \"sans-serif\"',\r\n      borderRadius: \"50px\",\r\n      paddingLeft: \"1rem\",\r\n      color: \"#999999\"\r\n    },\r\n    \"& .MuiOutlinedInput-root\": {\r\n      \"& fieldset\": {\r\n        borderColor: \"rgba(255, 255, 255, 0.16)\"\r\n      },\r\n      \"&:hover fieldset\": {\r\n        border: \"1px solid rgba(255, 255, 255, 0.16)\"\r\n      },\r\n      \"&.Mui-focused fieldset\": {\r\n        border: \"1px solid rgba(255, 255, 255, 0.13)\"\r\n      }\r\n    },\r\n    \"& .MuiIconButton-root\": {\r\n      \"&:hover\": {\r\n        backgroundColor: \"rgba(255, 255, 255, 0.05)\"\r\n      }\r\n    },\r\n    \"& .MuiSvgIcon-root\": {\r\n      fill: \"#caa337\"\r\n    }\r\n  }\r\n});\r\n\r\nfunction ImageSearch({ getImages, setSearchBtnRef }) {\r\n  const classes = useStyles();\r\n\r\n  const searchInput = useRef();\r\n  const searchBtn = useRef();\r\n\r\n  useEffect(() => {\r\n    setSearchBtnRef(searchBtn);\r\n    searchInput.current.focus();\r\n  });\r\n\r\n  return (\r\n    <form className=\"form\" onSubmit={getImages}>\r\n      <TextField\r\n        classes={{\r\n          root: classes.root\r\n        }}\r\n        variant=\"outlined\"\r\n        color=\"primary\"\r\n        name=\"query\"\r\n        inputRef={searchInput}\r\n        InputProps={{\r\n          endAdornment: (\r\n            <InputAdornment>\r\n              <IconButton className=\"search-btn\" type=\"submit\" ref={searchBtn}>\r\n                <SearchIcon />\r\n              </IconButton>\r\n            </InputAdornment>\r\n          )\r\n        }}\r\n      />\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ImageSearch;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction ImageList({ images, totalPages }) {\r\n  return (\r\n    <div\r\n      className=\"image-list\"\r\n      style={totalPages > 1 ? { minHeight: \"1000px\" } : {}}\r\n    >\r\n      {images.map(image => {\r\n        return (\r\n          <div key={image.id}>\r\n            <Link\r\n              to={{\r\n                pathname: `/image/${image.id}`,\r\n                state: { image }\r\n              }}\r\n            >\r\n              <img\r\n                className=\"img-thumb\"\r\n                src={image.largeImageURL}\r\n                alt=\"{image.tags}\"\r\n              />\r\n            </Link>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImageList;\r\n","import React from \"react\";\r\n\r\nfunction Pagination(props) {\r\n  const pageLinks = [];\r\n\r\n  for (let i = 1; i <= props.totalPages; i++) {\r\n    pageLinks.push(\r\n      <li className=\"pagination-item\" key={i}>\r\n        <a\r\n          className={\r\n            props.currentPage === i\r\n              ? \"pagination-link pagination-link-active\"\r\n              : \"pagination-link pagination-link-passive\"\r\n          }\r\n          href=\"#\"\r\n          onClick={\r\n            props.currentPage === i\r\n              ? e => e.preventDefault()\r\n              : e => props.changePage(e, i)\r\n          }\r\n        >\r\n          {i}\r\n        </a>\r\n      </li>\r\n    );\r\n  }\r\n\r\n  return <ul className=\"pagination\">{pageLinks}</ul>;\r\n}\r\n\r\nexport default Pagination;\r\n","import React, { useState } from \"react\";\r\nimport ImageSearch from \"./components/ImageSearch\";\r\nimport ImageList from \"./components/ImageList\";\r\nimport Pagination from \"./components/Pagination\";\r\nimport \"./styles/style.css\";\r\n\r\nconst api_key = \"16587840-38253a67588d5082167fb10f6\";\r\n\r\nfunction App() {\r\n  const [images, setImages] = useState([]);\r\n  const [loading, setLoading] = useState(undefined);\r\n  const [totalPages, setTotalPages] = useState(undefined);\r\n  const [currentPage, setCurrentPage] = useState(undefined);\r\n  const [prevQuery, setPrevQuery] = useState(undefined);\r\n  const [searchBtnRef, setSearchBtnRef] = useState(undefined);\r\n  const [error, setError] = useState(undefined);\r\n\r\n  const getImages = async e => {\r\n    e.preventDefault();\r\n    const query = e.target.elements.query.value;\r\n    if (query) setLoading(true);\r\n    const url = `https://pixabay.com/api/?key=${api_key}&q=${query}&page=${\r\n      query !== prevQuery ? setCurrentPage(1) : currentPage\r\n    }&per_page=30&image_type=photo&pretty=true&orientation=horizontal`;\r\n    const request = await fetch(url);\r\n    const response = await request.json();\r\n\r\n    function pageCounter() {\r\n      const pages = parseInt(response.totalHits / 30);\r\n      if (pages > 10) return 10;\r\n      return pages;\r\n    }\r\n\r\n    if (!query) {\r\n      setImages([]);\r\n      setTotalPages(undefined);\r\n      setError(undefined);\r\n      setLoading(false);\r\n    } else if (!response.total) {\r\n      setImages([]);\r\n      setTotalPages(undefined);\r\n      setError(\"Изображения не найдены.\");\r\n      setLoading(false);\r\n    } else if (response.total) {\r\n      setImages(response.hits);\r\n      setTotalPages(pageCounter());\r\n      setPrevQuery(query);\r\n      setError(undefined);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  function changePage(e, pageNum) {\r\n    e.preventDefault();\r\n    setCurrentPage(pageNum);\r\n    setImages([]);\r\n    window.scrollTo({ top: 0 });\r\n    setTimeout(() => searchBtnRef.current.click());\r\n  }\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <ImageSearch getImages={getImages} setSearchBtnRef={setSearchBtnRef} />\r\n\r\n      {error && <p className=\"error\">{error}</p>}\r\n\r\n      <ImageList images={images} totalPages={totalPages} />\r\n\r\n      {loading === false && totalPages > 1 && (\r\n        <Pagination\r\n          totalPages={totalPages}\r\n          currentPage={currentPage}\r\n          changePage={changePage}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    backgroundColor: \"#0e0e0e\",\r\n    textTransform: \"capitalize\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#040404\"\r\n    }\r\n  }\r\n});\r\n\r\nfunction ImageView(props) {\r\n  const classes = useStyles();\r\n\r\n  const { largeImageURL: image, tags, user } = props.location.state.image;\r\n\r\n  return (\r\n    <div className=\"image-view-container\">\r\n      <div className=\"image-view\">\r\n        <img className=\"img-preview\" src={image} alt={tags} />\r\n        <p className=\"copyright\">&copy; pixabay</p>\r\n        <h4 className=\"credit\">\r\n          Автор: <span>{user}</span>\r\n        </h4>\r\n        <a className=\"download-link\" href={image} target=\"_blank\">\r\n          <Button\r\n            className={classes.root}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"large\"\r\n            startIcon={<SaveIcon />}\r\n          >\r\n            Скачать\r\n          </Button>\r\n        </a>\r\n        <Link to=\"/\">\r\n          <button className=\"back-btn\">\r\n            <svg\r\n              className=\"back-icon\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              viewBox=\"0 0 48 48\"\r\n            >\r\n              <path d=\"M40 22H15.66l11.17-11.17L24 8 8 24l16 16 2.83-2.83L15.66 26H40v-4z\" />\r\n            </svg>\r\n          </button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImageView;\r\n","import React from \"react\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport App from \"./App\";\r\nimport ImageView from \"./components/ImageView\";\r\n\r\nfunction Router() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route path=\"/image-search\" component={App} exact />\r\n        <Route path=\"/image/:id\" component={ImageView} />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default Router;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Router from \"./Router\";\n\nReactDOM.render(<Router />, document.getElementById(\"root\"));\n"],"sourceRoot":""}