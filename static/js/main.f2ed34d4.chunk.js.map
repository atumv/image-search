{"version":3,"sources":["components/SearchForm.js","components/InfiniteScrolling.js","components/ImageList.js","components/Error.js","utils/getData.js","App.js","variables/variables.js","components/ImagePreview.js","components/UserInfo.js","components/DownloadButton.js","components/BackButton.js","components/ImageView.js","index.js"],"names":["SearchForm","getImages","searchInput","useRef","useEffect","current","focus","className","onSubmit","type","name","placeholder","ref","InfiniteScrolling","props","pageStart","loadMore","hasMore","threshold","initialLoad","children","ImageList","images","map","image","key","id","to","pathname","state","src","previewURL","alt","tags","Error","error","getData","url","a","fetch","response","json","data","App","useState","apiKey","baseUrl","setImages","page","setPage","undefined","query","setQuery","setError","e","preventDefault","inputValue","target","elements","value","trim","results","total","hits","newImages","ImagePreview","webformatURL","UserInfo","userImageURL","href","user","user_id","DownloadButton","largeImageURL","Button","variant","color","size","style","textTransform","fontWeight","startIcon","BackButton","xmlns","viewBox","d","ImageView","location","ReactDOM","render","path","exact","component","document","getElementById"],"mappings":"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","file":"static/js/main.f2ed34d4.chunk.js","sourcesContent":["import React, { useRef, useEffect } from \"react\";\r\n\r\nconst SearchForm = ({ getImages }) => {\r\n  const searchInput = useRef();\r\n\r\n  useEffect(() => searchInput.current.focus());\r\n\r\n  return (\r\n    <form className=\"form\" onSubmit={getImages}>\r\n      <input\r\n        className=\"form-input\"\r\n        type=\"text\"\r\n        name=\"query\"\r\n        placeholder=\"type here\"\r\n        ref={searchInput}\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SearchForm;\r\n","import React from \"react\";\r\nimport InfiniteScroll from \"react-infinite-scroller\";\r\n\r\nconst InfiniteScrolling = props => (\r\n  <InfiniteScroll\r\n    pageStart={0}\r\n    loadMore={props.loadMore}\r\n    hasMore={true || false}\r\n    threshold={1100}\r\n    initialLoad={false}\r\n  >\r\n    {props.children}\r\n  </InfiniteScroll>\r\n);\r\n\r\nexport default InfiniteScrolling;\r\n","import React from \"react\";\r\nimport InfiniteScrolling from \"./InfiniteScrolling\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ImageList = ({ images, loadMore }) => (\r\n  <InfiniteScrolling loadMore={loadMore}>\r\n    <div className=\"image-list\">\r\n      {images.map(image => (\r\n        <div key={image.id}>\r\n          <Link\r\n            to={{\r\n              pathname: `/image/${image.id}`,\r\n              state: { image }\r\n            }}\r\n          >\r\n            <img\r\n              className=\"img-thumb\"\r\n              src={image.previewURL}\r\n              alt={image.tags}\r\n            />\r\n          </Link>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  </InfiniteScrolling>\r\n);\r\n\r\nexport default ImageList;\r\n","import React from \"react\";\r\n\r\nconst Error = ({ error }) => <p className=\"error\">{error}</p>;\r\n\r\nexport default Error;\r\n","const getData = async url => {\r\n  const response = await fetch(url);\r\n  const data = await response.json();\r\n  return data;\r\n};\r\n\r\nexport default getData;\r\n","import React, { useState } from \"react\";\r\nimport SearchForm from \"./components/SearchForm\";\r\nimport ImageList from \"./components/ImageList\";\r\nimport Error from \"./components/Error\";\r\nimport { api_key, base_url } from \"./variables/variables\";\r\nimport getData from \"./utils/getData\";\r\nimport \"./styles/style.css\";\r\n\r\nconst App = () => {\r\n  const [apiKey] = useState(api_key);\r\n  const [baseUrl] = useState(base_url);\r\n  const [images, setImages] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [query, setQuery] = useState(undefined);\r\n  const [error, setError] = useState(undefined);\r\n\r\n  const getImages = async e => {\r\n    e.preventDefault();\r\n\r\n    const inputValue = e.target.elements.query.value;\r\n    const query = inputValue.trim();\r\n\r\n    const url = `${baseUrl}&key=${apiKey}&q=${query}&page=1`;\r\n    const data = await getData(url);\r\n    const { total: results, hits: images } = data;\r\n\r\n    if (!query) {\r\n      setImages([]);\r\n      setError(undefined);\r\n    } else if (!results) {\r\n      setImages([]);\r\n      setError(\"No images were found.\");\r\n    } else if (results) {\r\n      setQuery(query);\r\n      setImages(images);\r\n      setError(undefined);\r\n    }\r\n  };\r\n\r\n  const loadMore = async () => {\r\n    const url = `${baseUrl}&key=${apiKey}&q=${query}&page=${page + 1}`;\r\n    const data = await getData(url);\r\n    const newImages = data.hits;\r\n    setImages([...images, ...newImages]);\r\n    setPage(page === 1 ? 3 : page + 1);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <SearchForm getImages={getImages} />\r\n      <ImageList images={images} loadMore={loadMore} />\r\n      <Error error={error} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","export const api_key = \"16587840-38253a67588d5082167fb10f6\";\r\nexport const base_url =\r\n  \"https://pixabay.com/api/?orientation=horizontal&per_page=120\";\r\n","import React from \"react\";\r\n\r\nconst ImagePreview = ({ image }) => (\r\n  <img className=\"img-preview\" src={image.webformatURL} alt={image.tags} />\r\n);\r\n\r\nexport default ImagePreview;\r\n","import React from \"react\";\r\n\r\nconst UserInfo = ({ image }) => (\r\n  <div>\r\n    {image.userImageURL && (\r\n      <img className=\"user-image\" src={image.userImageURL} alt=\"user-image\" />\r\n    )}\r\n    <h4 className=\"credit\">\r\n      by&nbsp;\r\n      <a\r\n        className=\"profile-link\"\r\n        href={`http://pixabay.com/users/${image.user}-${image.user_id}`}\r\n      >\r\n        {image.user}\r\n      </a>\r\n    </h4>\r\n  </div>\r\n);\r\n\r\nexport default UserInfo;\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\n\r\nconst DownloadButton = ({ image }) => (\r\n  <a className=\"download-link\" href={image.largeImageURL} target=\"_blank\">\r\n    <Button\r\n      variant=\"contained\"\r\n      color=\"default\"\r\n      size=\"large\"\r\n      style={{ textTransform: \"none\", fontWeight: \"bold\" }}\r\n      startIcon={<SaveIcon />}\r\n    >\r\n      Download\r\n    </Button>\r\n  </a>\r\n);\r\n\r\nexport default DownloadButton;\r\n","import React from \"react\";\r\n\r\nconst BackButton = () => (\r\n  <button className=\"back-btn\">\r\n    <svg\r\n      className=\"back-icon\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox=\"0 0 48 48\"\r\n    >\r\n      <path d=\"M40 22H15.66l11.17-11.17L24 8 8 24l16 16 2.83-2.83L15.66 26H40v-4z\" />\r\n    </svg>\r\n  </button>\r\n);\r\n\r\nexport default BackButton;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ImagePreview from \"./ImagePreview\";\r\nimport UserInfo from \"./UserInfo\";\r\nimport DownloadButton from \"./DownloadButton\";\r\nimport BackButton from \"./BackButton\";\r\n\r\nconst ImageView = props => {\r\n  const image = props.location.state.image;\r\n\r\n  return (\r\n    <div className=\"image-view-container\">\r\n      <div className=\"image-view\">\r\n        <ImagePreview image={image} />\r\n        <UserInfo image={image} />\r\n        <DownloadButton image={image} />\r\n        <Link to=\"/\">\r\n          <BackButton />\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageView;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport App from \"./App\";\nimport ImageView from \"./components/ImageView\";\n\nReactDOM.render(\n  <Router>\n    <Switch>\n      <Route path=\"/\" exact component={App} />\n      <Route path=\"/image/:id\" component={ImageView} />\n    </Switch>\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}